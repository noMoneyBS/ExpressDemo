require("dotenv").config();
const express = require("express");
const { sequelize } = require("./config/database");
const User = require("./models/User");
const Preference = require("./models/Preference");
const UserPreference = require("./models/UserPreference");

const app = express();
app.use(express.json());

// ц╖╗хКаCORSцФпцМБ
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', 'http://localhost:5173');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
  res.header('Access-Control-Allow-Credentials', 'true');
  
  if (req.method === 'OPTIONS') {
    res.sendStatus(200);
  } else {
    next();
  }
});

// хИдцЦнх╜УхЙНцибх╝П
const isMock = process.env.USE_MOCK === "true";

// хРМцнецХ░цНох║Уя╝Ичбоф┐Эшбич╗УцЮДцнгчбоя╝Й
sequelize
  .sync()
  .then(() => console.log("тЬЕ PostgreSQL цХ░цНох║Ух╖▓хРМцне"))
  .catch((err) => console.error("тЭМ цХ░цНох║УхРМцнехд▒ш┤е:", err));

// ш╖пчФ▒
app.use("/auth", require("./routes/auth"));
app.use("/preference", require("./routes/preference"));
app.use("/chat", require("./routes/chat"));

const PORT = process.env.PORT || 5001;
app.listen(PORT, () => {
  console.log(`ЁЯЪА Server running on port ${PORT}`);
  console.log(`ЁЯФз х╜УхЙНцибх╝П: ${isMock ? "Mock цибх╝П (ф╕Нф╜┐чФицХ░цНох║У)" : "цХ░цНох║Уцибх╝П (PostgreSQL)"}`);
});
